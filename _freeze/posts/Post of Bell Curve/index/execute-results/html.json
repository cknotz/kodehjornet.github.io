{
  "hash": "ebdc308780bde74fe63d7eb611dbc281",
  "result": {
    "markdown": "---\ntitle: \"The normal distribution\"\nauthor: \"Knut Solvig\"\ndate: \"2023-09-26\"\ncategories: [how-to, code, case, selection, quantitative]\nimage: \"bellcurve_standarddeviation.png\"\n---\n\n\nIn this blog post I wish to use some time to talk about the normal distribution or the *bell curve.*\n\nThe normal distribution is the ideal distribution of data as it is very easy to intepret, but even though it is called a *normal* distribution - it rarely occurs in scientific analyses.\n\nBelow you can see what a bell curve looks like in a simplified format in @fig-bellcurve:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nX <- seq(from=-3, to=3, length.out=1000)\n\nf.x <- dnorm(X, mean = 0, sd = 1)\n\nplot(X, f.x, type = 'l', col = \"red\", lwd=3)\n```\n\n::: {.cell-output-display}\n![A traditional bell curve.](index_files/figure-html/fig-bellcurve-1.png){#fig-bellcurve width=672}\n:::\n:::\n\n\nThe great thing about a bell curve is that you can use the **68-95-99** rule on it (like mentioned in Kellstedt & Whitten page. 150). This rule is basically the amount of data that are within the standard deviations of the mean in the graph. See the example from Kellstedt & Whitten below:\n\n![](images/bellcurve_standarddeviation.png)\n\nA way to understand how the bell curve works is to imagine that you roll a dice 1000 times. You are more likely to get a 3 or a 4 than you are to get 6 or 1, in that way everytime you plot into your dataset a dice throw you are creating a graph which should be relatively evenly distributed - like a bell curve.\n\nThank you for reading, I hope you are now a *little bit* smarter around the topic of the normal distribution - also called a *bell curve*.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}